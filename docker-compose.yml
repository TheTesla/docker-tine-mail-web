version: "3.3"
services:

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - --entrypoints.web.address=:80
      - --api.insecure=true
      - --providers.docker
      - --providers.docker.exposedbydefault=false
        #      - --log.level=DEBUG
      - --accesslog=true
    networks:
      - frontend
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: mariadb
    networks:
      - backend
    volumes:
      - ./init.sql:/data/application/init.sql

    environment:
      MYSQL_ROOT_PASSWORD: dbrootpass
      MYSQL_DATABASE: tine20
      MYSQL_USER: tine20
      MYSQL_PASSWORD: dbpass

  crm:
    build: tine-container
    networks:
      - backend
      - frontend
    labels:
      - "traefik.enable=true"  
      - "traefik.docker.network=docker-tine_frontend"
      - "traefik.http.routers.crm.rule=PathPrefix(`/crm`)"
      - "traefik.http.routers.crm.entrypoints=web"
      - "traefik.http.routers.crm.middlewares=crm-stripprefix"
      - "traefik.http.middlewares.crm-stripprefix.stripprefix.prefixes=/crm"
    depends_on:
      - db

  whoami:
    image: "containous/whoami"
    container_name: "simple-service"
    networks:
      - frontend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=PathPrefix(`/whoami`)"
      - "traefik.http.routers.whoami.entrypoints=web"

  cms:
    build: "grav-container"
    networks:
      - frontend
    labels:
      - "traefik.enable=true"  
      - "traefik.docker.network=docker-tine_frontend"
      - "traefik.http.routers.cms.rule=PathPrefix(`/`)"
      - "traefik.http.routers.cms.entrypoints=web"
      - "traefik.http.routers.cms.middlewares=cms-stripprefix"
      - "traefik.http.middlewares.cms-stripprefix.stripprefix.prefixes=/"



networks:
  backend:
  frontend:
